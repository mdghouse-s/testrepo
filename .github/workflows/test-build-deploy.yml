name: build and deploy
on:
  push:
    branches:
      - master
    paths-ignore:
      - '.github/workflows/**'
jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Setup Java
              uses: actions/setup-java@v3
              with:
                distribution: 'corretto'
                java-version: '11'
            - name: Cache Maven packages
              uses: actions/cache@v3
              with:
                path: ~/.m2/repository
                key: maven-${{ hashFiles('**/pom.xml') }} 
            - name: run tests
              run: mvn -B clean test
    build:
        runs-on: ubuntu-latest
        needs: test
        steps:
            - uses: actions/checkout@v3
            - name: Setup Java
              uses: actions/setup-java@v3
              with:
                distribution: 'corretto'
                java-version: '11'
            - name: Cache Maven packages
              uses: actions/cache@v3
              with:
                path: ~/.m2/repository
                key: maven-${{ hashFiles('**/pom.xml') }}    
            - name: build
              run: mvn -B clean package -DskipTests
            - name: upload artifact
              uses: actions/upload-artifact@v3
              with:
                name: packagedjar
                path: target/*.jar
    docker-image:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - uses: actions/checkout@v3
            - name: Setup Java
              uses: actions/setup-java@v3
              with:
                distribution: 'corretto'
                java-version: '11'
            - name: Cache Maven packages
              uses: actions/cache@v3
              with:
                path: ~/.m2/repository
                key: maven-${{ hashFiles('**/pom.xml') }}  
            - name: download artifact
              uses: actions/download-artifact@v3
              with:
                name: packagedjar
                path: target
            - name: build docker image
              run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/spring-boot-contacts-api .
            - name: docker login
              run: docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}
            - name: push docker image
              run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/spring-boot-docker-action
